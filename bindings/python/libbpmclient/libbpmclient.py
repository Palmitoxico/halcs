# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_libbpmclient', [dirname(__file__)])
        except ImportError:
            import _libbpmclient
            return _libbpmclient
        if fp is not None:
            try:
                _mod = imp.load_module('_libbpmclient', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _libbpmclient = swig_import_helper()
    del swig_import_helper
else:
    import _libbpmclient
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


BPM_CLIENT_SUCCESS = _libbpmclient.BPM_CLIENT_SUCCESS
BPM_CLIENT_ERR_ALLOC = _libbpmclient.BPM_CLIENT_ERR_ALLOC
BPM_CLIENT_ERR_SERVER = _libbpmclient.BPM_CLIENT_ERR_SERVER
BPM_CLIENT_ERR_AGAIN = _libbpmclient.BPM_CLIENT_ERR_AGAIN
BPM_CLIENT_ERR_TIMEOUT = _libbpmclient.BPM_CLIENT_ERR_TIMEOUT
BPM_CLIENT_ERR_MSG = _libbpmclient.BPM_CLIENT_ERR_MSG
BPM_CLIENT_INT = _libbpmclient.BPM_CLIENT_INT
BPM_CLIENT_ERR_INV_PARAM = _libbpmclient.BPM_CLIENT_ERR_INV_PARAM
BPM_CLIENT_ERR_INV_FUNCTION = _libbpmclient.BPM_CLIENT_ERR_INV_FUNCTION
BPM_CLIENT_ERR_END = _libbpmclient.BPM_CLIENT_ERR_END

def bpm_client_err_str(*args):
  return _libbpmclient.bpm_client_err_str(*args)
bpm_client_err_str = _libbpmclient.bpm_client_err_str
class _bpm_client_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, _bpm_client_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, _bpm_client_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["mdp_client"] = _libbpmclient._bpm_client_t_mdp_client_set
    __swig_getmethods__["mdp_client"] = _libbpmclient._bpm_client_t_mdp_client_get
    if _newclass:mdp_client = _swig_property(_libbpmclient._bpm_client_t_mdp_client_get, _libbpmclient._bpm_client_t_mdp_client_set)
    __swig_setmethods__["acq_chan"] = _libbpmclient._bpm_client_t_acq_chan_set
    __swig_getmethods__["acq_chan"] = _libbpmclient._bpm_client_t_acq_chan_get
    if _newclass:acq_chan = _swig_property(_libbpmclient._bpm_client_t_acq_chan_get, _libbpmclient._bpm_client_t_acq_chan_set)
    def __init__(self): 
        this = _libbpmclient.new__bpm_client_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libbpmclient.delete__bpm_client_t
    __del__ = lambda self : None;
_bpm_client_t_swigregister = _libbpmclient._bpm_client_t_swigregister
_bpm_client_t_swigregister(_bpm_client_t)


def bpm_client_new(*args):
  return _libbpmclient.bpm_client_new(*args)
bpm_client_new = _libbpmclient.bpm_client_new

def bpm_client_new_log_mode(*args):
  return _libbpmclient.bpm_client_new_log_mode(*args)
bpm_client_new_log_mode = _libbpmclient.bpm_client_new_log_mode

def bpm_client_destroy(*args):
  return _libbpmclient.bpm_client_destroy(*args)
bpm_client_destroy = _libbpmclient.bpm_client_destroy

def bpm_func_exec(*args):
  return _libbpmclient.bpm_func_exec(*args)
bpm_func_exec = _libbpmclient.bpm_func_exec

def bpm_func_translate(*args):
  return _libbpmclient.bpm_func_translate(*args)
bpm_func_translate = _libbpmclient.bpm_func_translate

def bpm_func_trans_exec(*args):
  return _libbpmclient.bpm_func_trans_exec(*args)
bpm_func_trans_exec = _libbpmclient.bpm_func_trans_exec

def bpm_blink_leds(*args):
  return _libbpmclient.bpm_blink_leds(*args)
bpm_blink_leds = _libbpmclient.bpm_blink_leds

def bpm_ad9510_cfg_defaults(*args):
  return _libbpmclient.bpm_ad9510_cfg_defaults(*args)
bpm_ad9510_cfg_defaults = _libbpmclient.bpm_ad9510_cfg_defaults

def bpm_set_fmc_pll_function(*args):
  return _libbpmclient.bpm_set_fmc_pll_function(*args)
bpm_set_fmc_pll_function = _libbpmclient.bpm_set_fmc_pll_function

def bpm_get_fmc_pll_function(*args):
  return _libbpmclient.bpm_get_fmc_pll_function(*args)
bpm_get_fmc_pll_function = _libbpmclient.bpm_get_fmc_pll_function

def bpm_set_fmc_pll_status(*args):
  return _libbpmclient.bpm_set_fmc_pll_status(*args)
bpm_set_fmc_pll_status = _libbpmclient.bpm_set_fmc_pll_status

def bpm_get_fmc_pll_status(*args):
  return _libbpmclient.bpm_get_fmc_pll_status(*args)
bpm_get_fmc_pll_status = _libbpmclient.bpm_get_fmc_pll_status

def bpm_set_fmc_clk_sel(*args):
  return _libbpmclient.bpm_set_fmc_clk_sel(*args)
bpm_set_fmc_clk_sel = _libbpmclient.bpm_set_fmc_clk_sel

def bpm_get_fmc_clk_sel(*args):
  return _libbpmclient.bpm_get_fmc_clk_sel(*args)
bpm_get_fmc_clk_sel = _libbpmclient.bpm_get_fmc_clk_sel

def bpm_set_adc_rand(*args):
  return _libbpmclient.bpm_set_adc_rand(*args)
bpm_set_adc_rand = _libbpmclient.bpm_set_adc_rand

def bpm_get_adc_rand(*args):
  return _libbpmclient.bpm_get_adc_rand(*args)
bpm_get_adc_rand = _libbpmclient.bpm_get_adc_rand

def bpm_set_adc_dith(*args):
  return _libbpmclient.bpm_set_adc_dith(*args)
bpm_set_adc_dith = _libbpmclient.bpm_set_adc_dith

def bpm_get_adc_dith(*args):
  return _libbpmclient.bpm_get_adc_dith(*args)
bpm_get_adc_dith = _libbpmclient.bpm_get_adc_dith

def bpm_set_adc_shdn(*args):
  return _libbpmclient.bpm_set_adc_shdn(*args)
bpm_set_adc_shdn = _libbpmclient.bpm_set_adc_shdn

def bpm_get_adc_shdn(*args):
  return _libbpmclient.bpm_get_adc_shdn(*args)
bpm_get_adc_shdn = _libbpmclient.bpm_get_adc_shdn

def bpm_set_adc_pga(*args):
  return _libbpmclient.bpm_set_adc_pga(*args)
bpm_set_adc_pga = _libbpmclient.bpm_set_adc_pga

def bpm_get_adc_pga(*args):
  return _libbpmclient.bpm_get_adc_pga(*args)
bpm_get_adc_pga = _libbpmclient.bpm_get_adc_pga

def bpm_set_adc_data0(*args):
  return _libbpmclient.bpm_set_adc_data0(*args)
bpm_set_adc_data0 = _libbpmclient.bpm_set_adc_data0

def bpm_get_adc_data0(*args):
  return _libbpmclient.bpm_get_adc_data0(*args)
bpm_get_adc_data0 = _libbpmclient.bpm_get_adc_data0

def bpm_set_adc_data1(*args):
  return _libbpmclient.bpm_set_adc_data1(*args)
bpm_set_adc_data1 = _libbpmclient.bpm_set_adc_data1

def bpm_get_adc_data1(*args):
  return _libbpmclient.bpm_get_adc_data1(*args)
bpm_get_adc_data1 = _libbpmclient.bpm_get_adc_data1

def bpm_set_adc_data2(*args):
  return _libbpmclient.bpm_set_adc_data2(*args)
bpm_set_adc_data2 = _libbpmclient.bpm_set_adc_data2

def bpm_get_adc_data2(*args):
  return _libbpmclient.bpm_get_adc_data2(*args)
bpm_get_adc_data2 = _libbpmclient.bpm_get_adc_data2

def bpm_set_adc_data3(*args):
  return _libbpmclient.bpm_set_adc_data3(*args)
bpm_set_adc_data3 = _libbpmclient.bpm_set_adc_data3

def bpm_get_adc_data3(*args):
  return _libbpmclient.bpm_get_adc_data3(*args)
bpm_get_adc_data3 = _libbpmclient.bpm_get_adc_data3

def bpm_set_adc_dly_val0(*args):
  return _libbpmclient.bpm_set_adc_dly_val0(*args)
bpm_set_adc_dly_val0 = _libbpmclient.bpm_set_adc_dly_val0

def bpm_get_adc_dly_val0(*args):
  return _libbpmclient.bpm_get_adc_dly_val0(*args)
bpm_get_adc_dly_val0 = _libbpmclient.bpm_get_adc_dly_val0

def bpm_set_adc_dly_val1(*args):
  return _libbpmclient.bpm_set_adc_dly_val1(*args)
bpm_set_adc_dly_val1 = _libbpmclient.bpm_set_adc_dly_val1

def bpm_get_adc_dly_val1(*args):
  return _libbpmclient.bpm_get_adc_dly_val1(*args)
bpm_get_adc_dly_val1 = _libbpmclient.bpm_get_adc_dly_val1

def bpm_set_adc_dly_val2(*args):
  return _libbpmclient.bpm_set_adc_dly_val2(*args)
bpm_set_adc_dly_val2 = _libbpmclient.bpm_set_adc_dly_val2

def bpm_get_adc_dly_val2(*args):
  return _libbpmclient.bpm_get_adc_dly_val2(*args)
bpm_get_adc_dly_val2 = _libbpmclient.bpm_get_adc_dly_val2

def bpm_set_adc_dly_val3(*args):
  return _libbpmclient.bpm_set_adc_dly_val3(*args)
bpm_set_adc_dly_val3 = _libbpmclient.bpm_set_adc_dly_val3

def bpm_get_adc_dly_val3(*args):
  return _libbpmclient.bpm_get_adc_dly_val3(*args)
bpm_get_adc_dly_val3 = _libbpmclient.bpm_get_adc_dly_val3

def bpm_set_adc_dly_line0(*args):
  return _libbpmclient.bpm_set_adc_dly_line0(*args)
bpm_set_adc_dly_line0 = _libbpmclient.bpm_set_adc_dly_line0

def bpm_get_adc_dly_line0(*args):
  return _libbpmclient.bpm_get_adc_dly_line0(*args)
bpm_get_adc_dly_line0 = _libbpmclient.bpm_get_adc_dly_line0

def bpm_set_adc_dly_line1(*args):
  return _libbpmclient.bpm_set_adc_dly_line1(*args)
bpm_set_adc_dly_line1 = _libbpmclient.bpm_set_adc_dly_line1

def bpm_get_adc_dly_line1(*args):
  return _libbpmclient.bpm_get_adc_dly_line1(*args)
bpm_get_adc_dly_line1 = _libbpmclient.bpm_get_adc_dly_line1

def bpm_set_adc_dly_line2(*args):
  return _libbpmclient.bpm_set_adc_dly_line2(*args)
bpm_set_adc_dly_line2 = _libbpmclient.bpm_set_adc_dly_line2

def bpm_get_adc_dly_line2(*args):
  return _libbpmclient.bpm_get_adc_dly_line2(*args)
bpm_get_adc_dly_line2 = _libbpmclient.bpm_get_adc_dly_line2

def bpm_set_adc_dly_line3(*args):
  return _libbpmclient.bpm_set_adc_dly_line3(*args)
bpm_set_adc_dly_line3 = _libbpmclient.bpm_set_adc_dly_line3

def bpm_get_adc_dly_line3(*args):
  return _libbpmclient.bpm_get_adc_dly_line3(*args)
bpm_get_adc_dly_line3 = _libbpmclient.bpm_get_adc_dly_line3

def bpm_set_adc_dly_updt0(*args):
  return _libbpmclient.bpm_set_adc_dly_updt0(*args)
bpm_set_adc_dly_updt0 = _libbpmclient.bpm_set_adc_dly_updt0

def bpm_get_adc_dly_updt0(*args):
  return _libbpmclient.bpm_get_adc_dly_updt0(*args)
bpm_get_adc_dly_updt0 = _libbpmclient.bpm_get_adc_dly_updt0

def bpm_set_adc_dly_updt1(*args):
  return _libbpmclient.bpm_set_adc_dly_updt1(*args)
bpm_set_adc_dly_updt1 = _libbpmclient.bpm_set_adc_dly_updt1

def bpm_get_adc_dly_updt1(*args):
  return _libbpmclient.bpm_get_adc_dly_updt1(*args)
bpm_get_adc_dly_updt1 = _libbpmclient.bpm_get_adc_dly_updt1

def bpm_set_adc_dly_updt2(*args):
  return _libbpmclient.bpm_set_adc_dly_updt2(*args)
bpm_set_adc_dly_updt2 = _libbpmclient.bpm_set_adc_dly_updt2

def bpm_get_adc_dly_updt2(*args):
  return _libbpmclient.bpm_get_adc_dly_updt2(*args)
bpm_get_adc_dly_updt2 = _libbpmclient.bpm_get_adc_dly_updt2

def bpm_set_adc_dly_updt3(*args):
  return _libbpmclient.bpm_set_adc_dly_updt3(*args)
bpm_set_adc_dly_updt3 = _libbpmclient.bpm_set_adc_dly_updt3

def bpm_get_adc_dly_updt3(*args):
  return _libbpmclient.bpm_get_adc_dly_updt3(*args)
bpm_get_adc_dly_updt3 = _libbpmclient.bpm_get_adc_dly_updt3

def bpm_set_adc_dly0(*args):
  return _libbpmclient.bpm_set_adc_dly0(*args)
bpm_set_adc_dly0 = _libbpmclient.bpm_set_adc_dly0

def bpm_set_adc_dly1(*args):
  return _libbpmclient.bpm_set_adc_dly1(*args)
bpm_set_adc_dly1 = _libbpmclient.bpm_set_adc_dly1

def bpm_set_adc_dly2(*args):
  return _libbpmclient.bpm_set_adc_dly2(*args)
bpm_set_adc_dly2 = _libbpmclient.bpm_set_adc_dly2

def bpm_set_adc_dly3(*args):
  return _libbpmclient.bpm_set_adc_dly3(*args)
bpm_set_adc_dly3 = _libbpmclient.bpm_set_adc_dly3

def bpm_set_adc_test_data_en(*args):
  return _libbpmclient.bpm_set_adc_test_data_en(*args)
bpm_set_adc_test_data_en = _libbpmclient.bpm_set_adc_test_data_en

def bpm_get_adc_test_data_en(*args):
  return _libbpmclient.bpm_get_adc_test_data_en(*args)
bpm_get_adc_test_data_en = _libbpmclient.bpm_get_adc_test_data_en

def bpm_set_si571_oe(*args):
  return _libbpmclient.bpm_set_si571_oe(*args)
bpm_set_si571_oe = _libbpmclient.bpm_set_si571_oe

def bpm_get_si571_oe(*args):
  return _libbpmclient.bpm_get_si571_oe(*args)
bpm_get_si571_oe = _libbpmclient.bpm_get_si571_oe

def bpm_set_trig_dir(*args):
  return _libbpmclient.bpm_set_trig_dir(*args)
bpm_set_trig_dir = _libbpmclient.bpm_set_trig_dir

def bpm_get_trig_dir(*args):
  return _libbpmclient.bpm_get_trig_dir(*args)
bpm_get_trig_dir = _libbpmclient.bpm_get_trig_dir

def bpm_set_trig_term(*args):
  return _libbpmclient.bpm_set_trig_term(*args)
bpm_set_trig_term = _libbpmclient.bpm_set_trig_term

def bpm_get_trig_term(*args):
  return _libbpmclient.bpm_get_trig_term(*args)
bpm_get_trig_term = _libbpmclient.bpm_get_trig_term

def bpm_set_trig_val(*args):
  return _libbpmclient.bpm_set_trig_val(*args)
bpm_set_trig_val = _libbpmclient.bpm_set_trig_val

def bpm_get_trig_val(*args):
  return _libbpmclient.bpm_get_trig_val(*args)
bpm_get_trig_val = _libbpmclient.bpm_get_trig_val

def bpm_set_ad9510_pll_a_div(*args):
  return _libbpmclient.bpm_set_ad9510_pll_a_div(*args)
bpm_set_ad9510_pll_a_div = _libbpmclient.bpm_set_ad9510_pll_a_div

def bpm_get_ad9510_pll_a_div(*args):
  return _libbpmclient.bpm_get_ad9510_pll_a_div(*args)
bpm_get_ad9510_pll_a_div = _libbpmclient.bpm_get_ad9510_pll_a_div

def bpm_set_ad9510_pll_b_div(*args):
  return _libbpmclient.bpm_set_ad9510_pll_b_div(*args)
bpm_set_ad9510_pll_b_div = _libbpmclient.bpm_set_ad9510_pll_b_div

def bpm_get_ad9510_pll_b_div(*args):
  return _libbpmclient.bpm_get_ad9510_pll_b_div(*args)
bpm_get_ad9510_pll_b_div = _libbpmclient.bpm_get_ad9510_pll_b_div

def bpm_set_ad9510_pll_prescaler(*args):
  return _libbpmclient.bpm_set_ad9510_pll_prescaler(*args)
bpm_set_ad9510_pll_prescaler = _libbpmclient.bpm_set_ad9510_pll_prescaler

def bpm_get_ad9510_pll_prescaler(*args):
  return _libbpmclient.bpm_get_ad9510_pll_prescaler(*args)
bpm_get_ad9510_pll_prescaler = _libbpmclient.bpm_get_ad9510_pll_prescaler

def bpm_set_ad9510_r_div(*args):
  return _libbpmclient.bpm_set_ad9510_r_div(*args)
bpm_set_ad9510_r_div = _libbpmclient.bpm_set_ad9510_r_div

def bpm_get_ad9510_r_div(*args):
  return _libbpmclient.bpm_get_ad9510_r_div(*args)
bpm_get_ad9510_r_div = _libbpmclient.bpm_get_ad9510_r_div

def bpm_set_ad9510_pll_pdown(*args):
  return _libbpmclient.bpm_set_ad9510_pll_pdown(*args)
bpm_set_ad9510_pll_pdown = _libbpmclient.bpm_set_ad9510_pll_pdown

def bpm_get_ad9510_pll_pdown(*args):
  return _libbpmclient.bpm_get_ad9510_pll_pdown(*args)
bpm_get_ad9510_pll_pdown = _libbpmclient.bpm_get_ad9510_pll_pdown

def bpm_set_ad9510_mux_status(*args):
  return _libbpmclient.bpm_set_ad9510_mux_status(*args)
bpm_set_ad9510_mux_status = _libbpmclient.bpm_set_ad9510_mux_status

def bpm_get_ad9510_mux_status(*args):
  return _libbpmclient.bpm_get_ad9510_mux_status(*args)
bpm_get_ad9510_mux_status = _libbpmclient.bpm_get_ad9510_mux_status

def bpm_set_ad9510_cp_current(*args):
  return _libbpmclient.bpm_set_ad9510_cp_current(*args)
bpm_set_ad9510_cp_current = _libbpmclient.bpm_set_ad9510_cp_current

def bpm_get_ad9510_cp_current(*args):
  return _libbpmclient.bpm_get_ad9510_cp_current(*args)
bpm_get_ad9510_cp_current = _libbpmclient.bpm_get_ad9510_cp_current

def bpm_set_ad9510_outputs(*args):
  return _libbpmclient.bpm_set_ad9510_outputs(*args)
bpm_set_ad9510_outputs = _libbpmclient.bpm_set_ad9510_outputs

def bpm_get_ad9510_outputs(*args):
  return _libbpmclient.bpm_get_ad9510_outputs(*args)
bpm_get_ad9510_outputs = _libbpmclient.bpm_get_ad9510_outputs

def bpm_set_ad9510_pll_clk_sel(*args):
  return _libbpmclient.bpm_set_ad9510_pll_clk_sel(*args)
bpm_set_ad9510_pll_clk_sel = _libbpmclient.bpm_set_ad9510_pll_clk_sel

def bpm_get_ad9510_pll_clk_sel(*args):
  return _libbpmclient.bpm_get_ad9510_pll_clk_sel(*args)
bpm_get_ad9510_pll_clk_sel = _libbpmclient.bpm_get_ad9510_pll_clk_sel

def bpm_set_si571_set_freq(*args):
  return _libbpmclient.bpm_set_si571_set_freq(*args)
bpm_set_si571_set_freq = _libbpmclient.bpm_set_si571_set_freq

def bpm_set_si571_defaults(*args):
  return _libbpmclient.bpm_set_si571_defaults(*args)
bpm_set_si571_defaults = _libbpmclient.bpm_set_si571_defaults
class _acq_req_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, _acq_req_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, _acq_req_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["num_samples"] = _libbpmclient._acq_req_t_num_samples_set
    __swig_getmethods__["num_samples"] = _libbpmclient._acq_req_t_num_samples_get
    if _newclass:num_samples = _swig_property(_libbpmclient._acq_req_t_num_samples_get, _libbpmclient._acq_req_t_num_samples_set)
    __swig_setmethods__["chan"] = _libbpmclient._acq_req_t_chan_set
    __swig_getmethods__["chan"] = _libbpmclient._acq_req_t_chan_get
    if _newclass:chan = _swig_property(_libbpmclient._acq_req_t_chan_get, _libbpmclient._acq_req_t_chan_set)
    def __init__(self): 
        this = _libbpmclient.new__acq_req_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libbpmclient.delete__acq_req_t
    __del__ = lambda self : None;
_acq_req_t_swigregister = _libbpmclient._acq_req_t_swigregister
_acq_req_t_swigregister(_acq_req_t)

class _acq_block_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, _acq_block_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, _acq_block_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["idx"] = _libbpmclient._acq_block_t_idx_set
    __swig_getmethods__["idx"] = _libbpmclient._acq_block_t_idx_get
    if _newclass:idx = _swig_property(_libbpmclient._acq_block_t_idx_get, _libbpmclient._acq_block_t_idx_set)
    __swig_setmethods__["data"] = _libbpmclient._acq_block_t_data_set
    __swig_getmethods__["data"] = _libbpmclient._acq_block_t_data_get
    if _newclass:data = _swig_property(_libbpmclient._acq_block_t_data_get, _libbpmclient._acq_block_t_data_set)
    __swig_setmethods__["data_size"] = _libbpmclient._acq_block_t_data_size_set
    __swig_getmethods__["data_size"] = _libbpmclient._acq_block_t_data_size_get
    if _newclass:data_size = _swig_property(_libbpmclient._acq_block_t_data_size_get, _libbpmclient._acq_block_t_data_size_set)
    __swig_setmethods__["bytes_read"] = _libbpmclient._acq_block_t_bytes_read_set
    __swig_getmethods__["bytes_read"] = _libbpmclient._acq_block_t_bytes_read_get
    if _newclass:bytes_read = _swig_property(_libbpmclient._acq_block_t_bytes_read_get, _libbpmclient._acq_block_t_bytes_read_set)
    def __init__(self): 
        this = _libbpmclient.new__acq_block_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libbpmclient.delete__acq_block_t
    __del__ = lambda self : None;
_acq_block_t_swigregister = _libbpmclient._acq_block_t_swigregister
_acq_block_t_swigregister(_acq_block_t)

class _acq_trans_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, _acq_trans_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, _acq_trans_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["req"] = _libbpmclient._acq_trans_t_req_set
    __swig_getmethods__["req"] = _libbpmclient._acq_trans_t_req_get
    if _newclass:req = _swig_property(_libbpmclient._acq_trans_t_req_get, _libbpmclient._acq_trans_t_req_set)
    __swig_setmethods__["block"] = _libbpmclient._acq_trans_t_block_set
    __swig_getmethods__["block"] = _libbpmclient._acq_trans_t_block_get
    if _newclass:block = _swig_property(_libbpmclient._acq_trans_t_block_get, _libbpmclient._acq_trans_t_block_set)
    def __init__(self): 
        this = _libbpmclient.new__acq_trans_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libbpmclient.delete__acq_trans_t
    __del__ = lambda self : None;
_acq_trans_t_swigregister = _libbpmclient._acq_trans_t_swigregister
_acq_trans_t_swigregister(_acq_trans_t)

class _acq_chan_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, _acq_chan_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, _acq_chan_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["chan"] = _libbpmclient._acq_chan_t_chan_set
    __swig_getmethods__["chan"] = _libbpmclient._acq_chan_t_chan_get
    if _newclass:chan = _swig_property(_libbpmclient._acq_chan_t_chan_get, _libbpmclient._acq_chan_t_chan_set)
    __swig_setmethods__["sample_size"] = _libbpmclient._acq_chan_t_sample_size_set
    __swig_getmethods__["sample_size"] = _libbpmclient._acq_chan_t_sample_size_get
    if _newclass:sample_size = _swig_property(_libbpmclient._acq_chan_t_sample_size_get, _libbpmclient._acq_chan_t_sample_size_set)
    def __init__(self): 
        this = _libbpmclient.new__acq_chan_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libbpmclient.delete__acq_chan_t
    __del__ = lambda self : None;
_acq_chan_t_swigregister = _libbpmclient._acq_chan_t_swigregister
_acq_chan_t_swigregister(_acq_chan_t)


def bpm_data_acquire(*args):
  return _libbpmclient.bpm_data_acquire(*args)
bpm_data_acquire = _libbpmclient.bpm_data_acquire

def bpm_check_data_acquire(*args):
  return _libbpmclient.bpm_check_data_acquire(*args)
bpm_check_data_acquire = _libbpmclient.bpm_check_data_acquire

def bpm_wait_data_acquire_timed(*args):
  return _libbpmclient.bpm_wait_data_acquire_timed(*args)
bpm_wait_data_acquire_timed = _libbpmclient.bpm_wait_data_acquire_timed

def bpm_get_data_block(*args):
  return _libbpmclient.bpm_get_data_block(*args)
bpm_get_data_block = _libbpmclient.bpm_get_data_block

def bpm_get_curve(*args):
  return _libbpmclient.bpm_get_curve(*args)
bpm_get_curve = _libbpmclient.bpm_get_curve

def bpm_acq_start(*args):
  return _libbpmclient.bpm_acq_start(*args)
bpm_acq_start = _libbpmclient.bpm_acq_start

def bpm_acq_check(*args):
  return _libbpmclient.bpm_acq_check(*args)
bpm_acq_check = _libbpmclient.bpm_acq_check

def bpm_acq_get_data_block(*args):
  return _libbpmclient.bpm_acq_get_data_block(*args)
bpm_acq_get_data_block = _libbpmclient.bpm_acq_get_data_block

def bpm_acq_get_curve(*args):
  return _libbpmclient.bpm_acq_get_curve(*args)
bpm_acq_get_curve = _libbpmclient.bpm_acq_get_curve

def bpm_full_acq(*args):
  return _libbpmclient.bpm_full_acq(*args)
bpm_full_acq = _libbpmclient.bpm_full_acq

def bpm_set_kx(*args):
  return _libbpmclient.bpm_set_kx(*args)
bpm_set_kx = _libbpmclient.bpm_set_kx

def bpm_get_kx(*args):
  return _libbpmclient.bpm_get_kx(*args)
bpm_get_kx = _libbpmclient.bpm_get_kx

def bpm_set_ky(*args):
  return _libbpmclient.bpm_set_ky(*args)
bpm_set_ky = _libbpmclient.bpm_set_ky

def bpm_get_ky(*args):
  return _libbpmclient.bpm_get_ky(*args)
bpm_get_ky = _libbpmclient.bpm_get_ky

def bpm_set_ksum(*args):
  return _libbpmclient.bpm_set_ksum(*args)
bpm_set_ksum = _libbpmclient.bpm_set_ksum

def bpm_get_ksum(*args):
  return _libbpmclient.bpm_get_ksum(*args)
bpm_get_ksum = _libbpmclient.bpm_get_ksum

def bpm_set_ds_tbt_thres(*args):
  return _libbpmclient.bpm_set_ds_tbt_thres(*args)
bpm_set_ds_tbt_thres = _libbpmclient.bpm_set_ds_tbt_thres

def bpm_get_ds_tbt_thres(*args):
  return _libbpmclient.bpm_get_ds_tbt_thres(*args)
bpm_get_ds_tbt_thres = _libbpmclient.bpm_get_ds_tbt_thres

def bpm_set_ds_fofb_thres(*args):
  return _libbpmclient.bpm_set_ds_fofb_thres(*args)
bpm_set_ds_fofb_thres = _libbpmclient.bpm_set_ds_fofb_thres

def bpm_get_ds_fofb_thres(*args):
  return _libbpmclient.bpm_get_ds_fofb_thres(*args)
bpm_get_ds_fofb_thres = _libbpmclient.bpm_get_ds_fofb_thres

def bpm_set_ds_monit_thres(*args):
  return _libbpmclient.bpm_set_ds_monit_thres(*args)
bpm_set_ds_monit_thres = _libbpmclient.bpm_set_ds_monit_thres

def bpm_get_ds_monit_thres(*args):
  return _libbpmclient.bpm_get_ds_monit_thres(*args)
bpm_get_ds_monit_thres = _libbpmclient.bpm_get_ds_monit_thres

def bpm_set_monit_pos_x(*args):
  return _libbpmclient.bpm_set_monit_pos_x(*args)
bpm_set_monit_pos_x = _libbpmclient.bpm_set_monit_pos_x

def bpm_get_monit_pos_x(*args):
  return _libbpmclient.bpm_get_monit_pos_x(*args)
bpm_get_monit_pos_x = _libbpmclient.bpm_get_monit_pos_x

def bpm_set_monit_pos_y(*args):
  return _libbpmclient.bpm_set_monit_pos_y(*args)
bpm_set_monit_pos_y = _libbpmclient.bpm_set_monit_pos_y

def bpm_get_monit_pos_y(*args):
  return _libbpmclient.bpm_get_monit_pos_y(*args)
bpm_get_monit_pos_y = _libbpmclient.bpm_get_monit_pos_y

def bpm_set_monit_pos_q(*args):
  return _libbpmclient.bpm_set_monit_pos_q(*args)
bpm_set_monit_pos_q = _libbpmclient.bpm_set_monit_pos_q

def bpm_get_monit_pos_q(*args):
  return _libbpmclient.bpm_get_monit_pos_q(*args)
bpm_get_monit_pos_q = _libbpmclient.bpm_get_monit_pos_q

def bpm_set_monit_pos_sum(*args):
  return _libbpmclient.bpm_set_monit_pos_sum(*args)
bpm_set_monit_pos_sum = _libbpmclient.bpm_set_monit_pos_sum

def bpm_get_monit_pos_sum(*args):
  return _libbpmclient.bpm_get_monit_pos_sum(*args)
bpm_get_monit_pos_sum = _libbpmclient.bpm_get_monit_pos_sum

def bpm_set_monit_amp_ch0(*args):
  return _libbpmclient.bpm_set_monit_amp_ch0(*args)
bpm_set_monit_amp_ch0 = _libbpmclient.bpm_set_monit_amp_ch0

def bpm_get_monit_amp_ch0(*args):
  return _libbpmclient.bpm_get_monit_amp_ch0(*args)
bpm_get_monit_amp_ch0 = _libbpmclient.bpm_get_monit_amp_ch0

def bpm_set_monit_amp_ch1(*args):
  return _libbpmclient.bpm_set_monit_amp_ch1(*args)
bpm_set_monit_amp_ch1 = _libbpmclient.bpm_set_monit_amp_ch1

def bpm_get_monit_amp_ch1(*args):
  return _libbpmclient.bpm_get_monit_amp_ch1(*args)
bpm_get_monit_amp_ch1 = _libbpmclient.bpm_get_monit_amp_ch1

def bpm_set_monit_amp_ch2(*args):
  return _libbpmclient.bpm_set_monit_amp_ch2(*args)
bpm_set_monit_amp_ch2 = _libbpmclient.bpm_set_monit_amp_ch2

def bpm_get_monit_amp_ch2(*args):
  return _libbpmclient.bpm_get_monit_amp_ch2(*args)
bpm_get_monit_amp_ch2 = _libbpmclient.bpm_get_monit_amp_ch2

def bpm_set_monit_amp_ch3(*args):
  return _libbpmclient.bpm_set_monit_amp_ch3(*args)
bpm_set_monit_amp_ch3 = _libbpmclient.bpm_set_monit_amp_ch3

def bpm_get_monit_amp_ch3(*args):
  return _libbpmclient.bpm_get_monit_amp_ch3(*args)
bpm_get_monit_amp_ch3 = _libbpmclient.bpm_get_monit_amp_ch3

def bpm_set_sw(*args):
  return _libbpmclient.bpm_set_sw(*args)
bpm_set_sw = _libbpmclient.bpm_set_sw

def bpm_get_sw(*args):
  return _libbpmclient.bpm_get_sw(*args)
bpm_get_sw = _libbpmclient.bpm_get_sw

def bpm_set_sw_en(*args):
  return _libbpmclient.bpm_set_sw_en(*args)
bpm_set_sw_en = _libbpmclient.bpm_set_sw_en

def bpm_get_sw_en(*args):
  return _libbpmclient.bpm_get_sw_en(*args)
bpm_get_sw_en = _libbpmclient.bpm_get_sw_en

def bpm_set_div_clk(*args):
  return _libbpmclient.bpm_set_div_clk(*args)
bpm_set_div_clk = _libbpmclient.bpm_set_div_clk

def bpm_get_div_clk(*args):
  return _libbpmclient.bpm_get_div_clk(*args)
bpm_get_div_clk = _libbpmclient.bpm_get_div_clk

def bpm_set_sw_dly(*args):
  return _libbpmclient.bpm_set_sw_dly(*args)
bpm_set_sw_dly = _libbpmclient.bpm_set_sw_dly

def bpm_get_sw_dly(*args):
  return _libbpmclient.bpm_get_sw_dly(*args)
bpm_get_sw_dly = _libbpmclient.bpm_get_sw_dly

def bpm_set_wdw(*args):
  return _libbpmclient.bpm_set_wdw(*args)
bpm_set_wdw = _libbpmclient.bpm_set_wdw

def bpm_get_wdw(*args):
  return _libbpmclient.bpm_get_wdw(*args)
bpm_get_wdw = _libbpmclient.bpm_get_wdw

def bpm_set_wdw_dly(*args):
  return _libbpmclient.bpm_set_wdw_dly(*args)
bpm_set_wdw_dly = _libbpmclient.bpm_set_wdw_dly

def bpm_get_wdw_dly(*args):
  return _libbpmclient.bpm_get_wdw_dly(*args)
bpm_get_wdw_dly = _libbpmclient.bpm_get_wdw_dly

def bpm_set_gain_a(*args):
  return _libbpmclient.bpm_set_gain_a(*args)
bpm_set_gain_a = _libbpmclient.bpm_set_gain_a

def bpm_get_gain_a(*args):
  return _libbpmclient.bpm_get_gain_a(*args)
bpm_get_gain_a = _libbpmclient.bpm_get_gain_a

def bpm_set_gain_b(*args):
  return _libbpmclient.bpm_set_gain_b(*args)
bpm_set_gain_b = _libbpmclient.bpm_set_gain_b

def bpm_get_gain_b(*args):
  return _libbpmclient.bpm_get_gain_b(*args)
bpm_get_gain_b = _libbpmclient.bpm_get_gain_b

def bpm_set_gain_c(*args):
  return _libbpmclient.bpm_set_gain_c(*args)
bpm_set_gain_c = _libbpmclient.bpm_set_gain_c

def bpm_get_gain_c(*args):
  return _libbpmclient.bpm_get_gain_c(*args)
bpm_get_gain_c = _libbpmclient.bpm_get_gain_c

def bpm_set_gain_d(*args):
  return _libbpmclient.bpm_set_gain_d(*args)
bpm_set_gain_d = _libbpmclient.bpm_set_gain_d

def bpm_get_gain_d(*args):
  return _libbpmclient.bpm_get_gain_d(*args)
bpm_get_gain_d = _libbpmclient.bpm_get_gain_d

def bpm_set_rffe_sw(*args):
  return _libbpmclient.bpm_set_rffe_sw(*args)
bpm_set_rffe_sw = _libbpmclient.bpm_set_rffe_sw

def bpm_get_rffe_sw(*args):
  return _libbpmclient.bpm_get_rffe_sw(*args)
bpm_get_rffe_sw = _libbpmclient.bpm_get_rffe_sw

def bpm_set_rffe_att1(*args):
  return _libbpmclient.bpm_set_rffe_att1(*args)
bpm_set_rffe_att1 = _libbpmclient.bpm_set_rffe_att1

def bpm_get_rffe_att1(*args):
  return _libbpmclient.bpm_get_rffe_att1(*args)
bpm_get_rffe_att1 = _libbpmclient.bpm_get_rffe_att1

def bpm_set_rffe_att2(*args):
  return _libbpmclient.bpm_set_rffe_att2(*args)
bpm_set_rffe_att2 = _libbpmclient.bpm_set_rffe_att2

def bpm_get_rffe_att2(*args):
  return _libbpmclient.bpm_get_rffe_att2(*args)
bpm_get_rffe_att2 = _libbpmclient.bpm_get_rffe_att2

def bpm_get_rffe_temp1(*args):
  return _libbpmclient.bpm_get_rffe_temp1(*args)
bpm_get_rffe_temp1 = _libbpmclient.bpm_get_rffe_temp1

def bpm_get_rffe_temp2(*args):
  return _libbpmclient.bpm_get_rffe_temp2(*args)
bpm_get_rffe_temp2 = _libbpmclient.bpm_get_rffe_temp2

def bpm_get_rffe_temp3(*args):
  return _libbpmclient.bpm_get_rffe_temp3(*args)
bpm_get_rffe_temp3 = _libbpmclient.bpm_get_rffe_temp3

def bpm_get_rffe_temp4(*args):
  return _libbpmclient.bpm_get_rffe_temp4(*args)
bpm_get_rffe_temp4 = _libbpmclient.bpm_get_rffe_temp4

def bpm_set_rffe_set_point1(*args):
  return _libbpmclient.bpm_set_rffe_set_point1(*args)
bpm_set_rffe_set_point1 = _libbpmclient.bpm_set_rffe_set_point1

def bpm_get_rffe_set_point1(*args):
  return _libbpmclient.bpm_get_rffe_set_point1(*args)
bpm_get_rffe_set_point1 = _libbpmclient.bpm_get_rffe_set_point1

def bpm_set_rffe_set_point2(*args):
  return _libbpmclient.bpm_set_rffe_set_point2(*args)
bpm_set_rffe_set_point2 = _libbpmclient.bpm_set_rffe_set_point2

def bpm_get_rffe_set_point2(*args):
  return _libbpmclient.bpm_get_rffe_set_point2(*args)
bpm_get_rffe_set_point2 = _libbpmclient.bpm_get_rffe_set_point2

def bpm_set_rffe_temp_control(*args):
  return _libbpmclient.bpm_set_rffe_temp_control(*args)
bpm_set_rffe_temp_control = _libbpmclient.bpm_set_rffe_temp_control

def bpm_get_rffe_temp_control(*args):
  return _libbpmclient.bpm_get_rffe_temp_control(*args)
bpm_get_rffe_temp_control = _libbpmclient.bpm_get_rffe_temp_control

def bpm_set_rffe_output1(*args):
  return _libbpmclient.bpm_set_rffe_output1(*args)
bpm_set_rffe_output1 = _libbpmclient.bpm_set_rffe_output1

def bpm_get_rffe_output1(*args):
  return _libbpmclient.bpm_get_rffe_output1(*args)
bpm_get_rffe_output1 = _libbpmclient.bpm_get_rffe_output1

def bpm_set_rffe_output2(*args):
  return _libbpmclient.bpm_set_rffe_output2(*args)
bpm_set_rffe_output2 = _libbpmclient.bpm_set_rffe_output2

def bpm_get_rffe_output2(*args):
  return _libbpmclient.bpm_get_rffe_output2(*args)
bpm_get_rffe_output2 = _libbpmclient.bpm_get_rffe_output2

def bpm_set_rffe_reset(*args):
  return _libbpmclient.bpm_set_rffe_reset(*args)
bpm_set_rffe_reset = _libbpmclient.bpm_set_rffe_reset

def bpm_get_rffe_reset(*args):
  return _libbpmclient.bpm_get_rffe_reset(*args)
bpm_get_rffe_reset = _libbpmclient.bpm_get_rffe_reset

def bpm_set_rffe_reprog(*args):
  return _libbpmclient.bpm_set_rffe_reprog(*args)
bpm_set_rffe_reprog = _libbpmclient.bpm_set_rffe_reprog

def bpm_get_rffe_reprog(*args):
  return _libbpmclient.bpm_get_rffe_reprog(*args)
bpm_get_rffe_reprog = _libbpmclient.bpm_get_rffe_reprog

def bpm_set_rffe_data(*args):
  return _libbpmclient.bpm_set_rffe_data(*args)
bpm_set_rffe_data = _libbpmclient.bpm_set_rffe_data

def bpm_get_rffe_data(*args):
  return _libbpmclient.bpm_get_rffe_data(*args)
bpm_get_rffe_data = _libbpmclient.bpm_get_rffe_data

def bpm_get_rffe_version(*args):
  return _libbpmclient.bpm_get_rffe_version(*args)
bpm_get_rffe_version = _libbpmclient.bpm_get_rffe_version

def bpm_set_rffe_sw_lvl(*args):
  return _libbpmclient.bpm_set_rffe_sw_lvl(*args)
bpm_set_rffe_sw_lvl = _libbpmclient.bpm_set_rffe_sw_lvl

def bpm_get_rffe_sw_lvl(*args):
  return _libbpmclient.bpm_get_rffe_sw_lvl(*args)
bpm_get_rffe_sw_lvl = _libbpmclient.bpm_get_rffe_sw_lvl

def bpm_set_afc_diag_card_slot(*args):
  return _libbpmclient.bpm_set_afc_diag_card_slot(*args)
bpm_set_afc_diag_card_slot = _libbpmclient.bpm_set_afc_diag_card_slot

def bpm_get_afc_diag_card_slot(*args):
  return _libbpmclient.bpm_get_afc_diag_card_slot(*args)
bpm_get_afc_diag_card_slot = _libbpmclient.bpm_get_afc_diag_card_slot

def bpm_set_afc_diag_ipmi_addr(*args):
  return _libbpmclient.bpm_set_afc_diag_ipmi_addr(*args)
bpm_set_afc_diag_ipmi_addr = _libbpmclient.bpm_set_afc_diag_ipmi_addr

def bpm_get_afc_diag_ipmi_addr(*args):
  return _libbpmclient.bpm_get_afc_diag_ipmi_addr(*args)
bpm_get_afc_diag_ipmi_addr = _libbpmclient.bpm_get_afc_diag_ipmi_addr

def bpm_get_afc_diag_build_revision(*args):
  return _libbpmclient.bpm_get_afc_diag_build_revision(*args)
bpm_get_afc_diag_build_revision = _libbpmclient.bpm_get_afc_diag_build_revision

def bpm_get_afc_diag_build_date(*args):
  return _libbpmclient.bpm_get_afc_diag_build_date(*args)
bpm_get_afc_diag_build_date = _libbpmclient.bpm_get_afc_diag_build_date

def bpm_get_afc_diag_build_user_name(*args):
  return _libbpmclient.bpm_get_afc_diag_build_user_name(*args)
bpm_get_afc_diag_build_user_name = _libbpmclient.bpm_get_afc_diag_build_user_name

def bpm_get_afc_diag_build_user_email(*args):
  return _libbpmclient.bpm_get_afc_diag_build_user_email(*args)
bpm_get_afc_diag_build_user_email = _libbpmclient.bpm_get_afc_diag_build_user_email

def func_polling(*args):
  return _libbpmclient.func_polling(*args)
func_polling = _libbpmclient.func_polling
# This file is compatible with both classic and new-style classes.

cvar = _libbpmclient.cvar

