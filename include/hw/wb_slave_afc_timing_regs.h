/*
  Register definitions for slave core: AFC Timing Sirius

  * File           : wb_slave_afc_timing_regs.h
  * Author         : auto-generated by wbgen2 from wb_slave_afc_timing_sirius.wb
  * Created        : Wed Aug 10 10:53:04 2016
  * Standard       : ANSI C

    THIS FILE WAS GENERATED BY wbgen2 FROM SOURCE FILE wb_slave_afc_timing_sirius.wb
    DO NOT HAND-EDIT UNLESS IT'S ABSOLUTELY NECESSARY!

*/

#ifndef __WBGEN2_REGDEFS_WB_SLAVE_AFC_TIMING_SIRIUS_WB
#define __WBGEN2_REGDEFS_WB_SLAVE_AFC_TIMING_SIRIUS_WB

#ifdef __KERNEL__
#include <linux/types.h>
#else
#include <inttypes.h>
#endif

#if defined( __GNUC__)
#define PACKED __attribute__ ((packed))
#else
#error "Unsupported compiler?"
#endif

#ifndef __WBGEN2_MACROS_DEFINED__
#define __WBGEN2_MACROS_DEFINED__
#define WBGEN2_GEN_MASK(offset, size) (((1<<(size))-1) << (offset))
#define WBGEN2_GEN_WRITE(value, offset, size) (((value) & ((1<<(size))-1)) << (offset))
#define WBGEN2_GEN_READ(reg, offset, size) (((reg) >> (offset)) & ((1<<(size))-1))
#define WBGEN2_SIGN_EXTEND(value, bits) (((value) & (1<<bits) ? ~((1<<(bits))-1): 0 ) | (value))
#endif


/* definitions for register: DDMTD average exponent */

/* definitions for field: DDMTD average exponent in reg: DDMTD average exponent */
#define TIMING_DDMTD_AVG_EXP_MASK             WBGEN2_GEN_MASK(0, 4)
#define TIMING_DDMTD_AVG_EXP_SHIFT            0
#define TIMING_DDMTD_AVG_EXP_W(value)         WBGEN2_GEN_WRITE(value, 0, 4)
#define TIMING_DDMTD_AVG_EXP_R(reg)           WBGEN2_GEN_READ(reg, 0, 4)

/* definitions for register: Status */

/* definitions for field: Fiber link in reg: Status */
#define TIMING_STAT_LINK                      WBGEN2_GEN_MASK(0, 1)

/* definitions for field: RX enable in reg: Status */
#define TIMING_STAT_RXEN                      WBGEN2_GEN_MASK(1, 1)

/* definitions for field: Ref clk locked in reg: Status */
#define TIMING_STAT_REFCLKLOCK                WBGEN2_GEN_MASK(2, 1)

/* definitions for register: RTM Si570 RFREQ */

/* definitions for register: RTM Si570 RFREQ */

/* definitions for register: RTM Si570 N1 */

/* definitions for field: RTM Si570 N1 in reg: RTM Si570 N1 */
#define TIMING_RTM_N1_MASK                    WBGEN2_GEN_MASK(0, 7)
#define TIMING_RTM_N1_SHIFT                   0
#define TIMING_RTM_N1_W(value)                WBGEN2_GEN_WRITE(value, 0, 7)
#define TIMING_RTM_N1_R(reg)                  WBGEN2_GEN_READ(reg, 0, 7)

/* definitions for field: RTM Si570 HS_DIV in reg: RTM Si570 N1 */
#define TIMING_RTM_HS_DIV_MASK                WBGEN2_GEN_MASK(7, 3)
#define TIMING_RTM_HS_DIV_SHIFT               7
#define TIMING_RTM_HS_DIV_W(value)            WBGEN2_GEN_WRITE(value, 7, 3)
#define TIMING_RTM_HS_DIV_R(reg)              WBGEN2_GEN_READ(reg, 7, 3)

/* definitions for register: AFC Si570 RFREQ */

/* definitions for register: AFC Si570 RFREQ */

/* definitions for register: AFC Si570 N1 */

/* definitions for field: AFC Si570 N1 in reg: AFC Si570 N1 */
#define TIMING_AFC_N1_MASK                    WBGEN2_GEN_MASK(0, 7)
#define TIMING_AFC_N1_SHIFT                   0
#define TIMING_AFC_N1_W(value)                WBGEN2_GEN_WRITE(value, 0, 7)
#define TIMING_AFC_N1_R(reg)                  WBGEN2_GEN_READ(reg, 0, 7)

/* definitions for field: AFC Si570 HS_DIV in reg: AFC Si570 N1 */
#define TIMING_AFC_HS_DIV_MASK                WBGEN2_GEN_MASK(7, 3)
#define TIMING_AFC_HS_DIV_SHIFT               7
#define TIMING_AFC_HS_DIV_W(value)            WBGEN2_GEN_WRITE(value, 7, 3)
#define TIMING_AFC_HS_DIV_R(reg)              WBGEN2_GEN_READ(reg, 7, 3)

/* definitions for register: Proportional gain frequency register */

/* definitions for field: Proportional gain frequency in reg: Proportional gain frequency register */
#define TIMING_FREQ_KP_MASK                   WBGEN2_GEN_MASK(0, 8)
#define TIMING_FREQ_KP_SHIFT                  0
#define TIMING_FREQ_KP_W(value)               WBGEN2_GEN_WRITE(value, 0, 8)
#define TIMING_FREQ_KP_R(reg)                 WBGEN2_GEN_READ(reg, 0, 8)

/* definitions for field: Integral gain frequency in reg: Proportional gain frequency register */
#define TIMING_FREQ_KI_MASK                   WBGEN2_GEN_MASK(8, 8)
#define TIMING_FREQ_KI_SHIFT                  8
#define TIMING_FREQ_KI_W(value)               WBGEN2_GEN_WRITE(value, 8, 8)
#define TIMING_FREQ_KI_R(reg)                 WBGEN2_GEN_READ(reg, 8, 8)

/* definitions for register: Phase feedback gain register */

/* definitions for field: Proportional gain phase in reg: Phase feedback gain register */
#define TIMING_PHASE_KP_MASK                  WBGEN2_GEN_MASK(0, 8)
#define TIMING_PHASE_KP_SHIFT                 0
#define TIMING_PHASE_KP_W(value)              WBGEN2_GEN_WRITE(value, 0, 8)
#define TIMING_PHASE_KP_R(reg)                WBGEN2_GEN_READ(reg, 0, 8)

/* definitions for field: Integral gain phase in reg: Phase feedback gain register */
#define TIMING_PHASE_KI_MASK                  WBGEN2_GEN_MASK(8, 8)
#define TIMING_PHASE_KI_SHIFT                 8
#define TIMING_PHASE_KI_W(value)              WBGEN2_GEN_WRITE(value, 8, 8)
#define TIMING_PHASE_KI_R(reg)                WBGEN2_GEN_READ(reg, 8, 8)

/* definitions for register: Phase feedback bias register */

/* definitions for register: Event code 0 */

/* definitions for register: Event code 1 */

/* definitions for register: Event code 2 */

/* definitions for register: Event code 3 */

/* definitions for register: Event code 4 */

/* definitions for register: Event code 5 */

/* definitions for register: Event code 6 */

/* definitions for register: Event delay 0 */

/* definitions for register: Event delay 1 */

/* definitions for register: Event delay 2 */

/* definitions for register: Event delay 3 */

/* definitions for register: Event delay 4 */

/* definitions for register: Event delay 5 */

/* definitions for register: Event delay 6 */

/* definitions for register: Event width 0 */

/* definitions for register: Event width 1 */

/* definitions for register: Event width 2 */

/* definitions for register: Event width 3 */

/* definitions for register: Event width 4 */

/* definitions for register: Event width 5 */

/* definitions for register: Event width 6 */
/* [0x0]: REG DDMTD average exponent */
#define TIMING_REG_DDMTD 0x00000000
/* [0x4]: REG Status */
#define TIMING_REG_STAT 0x00000004
/* [0x8]: REG RTM Si570 RFREQ */
#define TIMING_REG_RTM_RFREQ_HI 0x00000008
/* [0xc]: REG RTM Si570 RFREQ */
#define TIMING_REG_RTM_RFREQ_LO 0x0000000c
/* [0x10]: REG RTM Si570 N1 */
#define TIMING_REG_RTM 0x00000010
/* [0x14]: REG AFC Si570 RFREQ */
#define TIMING_REG_AFC_RFREQ_HI 0x00000014
/* [0x18]: REG AFC Si570 RFREQ */
#define TIMING_REG_AFC_RFREQ_LO 0x00000018
/* [0x1c]: REG AFC Si570 N1 */
#define TIMING_REG_AFC 0x0000001c
/* [0x20]: REG Proportional gain frequency register */
#define TIMING_REG_FREQ 0x00000020
/* [0x24]: REG Phase feedback gain register */
#define TIMING_REG_PHASE 0x00000024
/* [0x28]: REG Phase feedback bias register */
#define TIMING_REG_PHASE_BIAS 0x00000028
/* [0x2c]: REG Event code 0 */
#define TIMING_REG_EVT_IN0 0x0000002c
/* [0x30]: REG Event code 1 */
#define TIMING_REG_EVT_IN1 0x00000030
/* [0x34]: REG Event code 2 */
#define TIMING_REG_EVT_IN2 0x00000034
/* [0x38]: REG Event code 3 */
#define TIMING_REG_EVT_IN3 0x00000038
/* [0x3c]: REG Event code 4 */
#define TIMING_REG_EVT_IN4 0x0000003c
/* [0x40]: REG Event code 5 */
#define TIMING_REG_EVT_IN5 0x00000040
/* [0x44]: REG Event code 6 */
#define TIMING_REG_EVT_IN6 0x00000044
/* [0x48]: REG Event delay 0 */
#define TIMING_REG_EVT_DLY0 0x00000048
/* [0x4c]: REG Event delay 1 */
#define TIMING_REG_EVT_DLY1 0x0000004c
/* [0x50]: REG Event delay 2 */
#define TIMING_REG_EVT_DLY2 0x00000050
/* [0x54]: REG Event delay 3 */
#define TIMING_REG_EVT_DLY3 0x00000054
/* [0x58]: REG Event delay 4 */
#define TIMING_REG_EVT_DLY4 0x00000058
/* [0x5c]: REG Event delay 5 */
#define TIMING_REG_EVT_DLY5 0x0000005c
/* [0x60]: REG Event delay 6 */
#define TIMING_REG_EVT_DLY6 0x00000060
/* [0x64]: REG Event width 0 */
#define TIMING_REG_EVT_WDT0 0x00000064
/* [0x68]: REG Event width 1 */
#define TIMING_REG_EVT_WDT1 0x00000068
/* [0x6c]: REG Event width 2 */
#define TIMING_REG_EVT_WDT2 0x0000006c
/* [0x70]: REG Event width 3 */
#define TIMING_REG_EVT_WDT3 0x00000070
/* [0x74]: REG Event width 4 */
#define TIMING_REG_EVT_WDT4 0x00000074
/* [0x78]: REG Event width 5 */
#define TIMING_REG_EVT_WDT5 0x00000078
/* [0x7c]: REG Event width 6 */
#define TIMING_REG_EVT_WDT6 0x0000007c
#endif
